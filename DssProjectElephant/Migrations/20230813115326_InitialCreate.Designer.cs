// <auto-generated />
using System;
using DssProjectElephant.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DssProjectElephant.Migrations
{
    [DbContext(typeof(ApplicationDbContent))]
    [Migration("20230813115326_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DssProjectElephant.Models.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("DssProjectElephant.Models.AppUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AddressID")
                        .HasColumnType("int");

                    b.Property<int?>("Users")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("DssProjectElephant.Models.Club", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<int>("ClubCategory")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheAppUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TheAppUserID1")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AddressId");

                    b.HasIndex("TheAppUserID1");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("DssProjectElephant.Models.News", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NewsCategory")
                        .HasColumnType("int");

                    b.Property<string>("TheAppUserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TheAppUserID1")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AddressId");

                    b.HasIndex("TheAppUserID1");

                    b.ToTable("TheNews");
                });

            modelBuilder.Entity("DssProjectElephant.Models.AppUser", b =>
                {
                    b.HasOne("DssProjectElephant.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("DssProjectElephant.Models.Club", b =>
                {
                    b.HasOne("DssProjectElephant.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DssProjectElephant.Models.AppUser", "TheAppUser")
                        .WithMany("Clubs")
                        .HasForeignKey("TheAppUserID1");

                    b.Navigation("Address");

                    b.Navigation("TheAppUser");
                });

            modelBuilder.Entity("DssProjectElephant.Models.News", b =>
                {
                    b.HasOne("DssProjectElephant.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DssProjectElephant.Models.AppUser", "TheAppUser")
                        .WithMany("TheNews")
                        .HasForeignKey("TheAppUserID1");

                    b.Navigation("Address");

                    b.Navigation("TheAppUser");
                });

            modelBuilder.Entity("DssProjectElephant.Models.AppUser", b =>
                {
                    b.Navigation("Clubs");

                    b.Navigation("TheNews");
                });
#pragma warning restore 612, 618
        }
    }
}
